version: '3.8'

services:
  # PostgreSQL database with pgvector
  postgres:
    image: ankane/pgvector:latest
    container_name: studybuddy-postgres
    environment:
      POSTGRES_DB: studybuddy
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: devpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d studybuddy"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: studybuddy-frontend
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://dev:devpass@postgres:5432/studybuddy
      - NEXTAUTH_SECRET=dev-secret-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - AI_SERVICE_URL=http://ai-service:8000
      - GCS_BUCKET=local-materials
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/prisma:/app/prisma
    restart: unless-stopped

  # Python AI service
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: studybuddy-ai
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://dev:devpass@postgres:5432/studybuddy
      - LLM_PROVIDER=openai
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-5
      - OPENAI_MINI_MODEL=gpt-5-mini
      - GCS_BUCKET=local-materials
      - AI_SERVICE_URL=http://localhost:8000
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./ai-service/app:/app/app
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
